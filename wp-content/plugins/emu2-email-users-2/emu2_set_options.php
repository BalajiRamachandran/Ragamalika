<?php/*  Copyright	2010 Juergen Schulze	and 2006 Vincent Prat    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA*/?><?php	if (!current_user_can('manage_options')) {		print "<br />".__("You are not allowed to change the options of this plugin.", EMU2_I18N_DOMAIN);	}?><?php	$default_mail_format = 'html';	$max_bcc_recipients = '0';	$error=false;	$message="";	if ( isset( $_POST['default_mail_format'] ) ) {		$default_mail_format = $_POST['default_mail_format'];	}	if ( isset( $_POST['emu2_sender_name'] ) ) {		$emu2_sender_name = mysql_real_escape_string($_POST['emu2_sender_name']);	}			if ( isset( $_POST['emu2_sender_address'] ) && $_POST['emu2_sender_address']!="" ) {		if (!EMU2_is_valid_email($_POST['emu2_sender_address'])) {			$error=true;			$message=__('This is not a valid address.', EMU2_I18N_DOMAIN);				} else {			$emu2_sender_address = $_POST['emu2_sender_address'];		}			}		if ( isset( $_POST['max_bcc_recipients']) && $_POST['max_bcc_recipients']!="" ) {		# check max bcc for number		if (!preg_match('/^[0-9]+$/', $_POST['max_bcc_recipients'])) {			$error=true;			$message=__('Max Bcc must be a digit value.', EMU2_I18N_DOMAIN);		} else {			$max_bcc_recipients = $_POST['max_bcc_recipients'];		}	}	if ( isset( $_POST['schedule_time']) && $_POST['schedule_time']!="" ) {		# check schedule time		#if (!in_array($_POST['schedule_time'], array('00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00' ))) {		if( !preg_match('/^(?:2[0-4]|[01][0-9]):[0-5][0-9]$/', trim($_POST['schedule_time'])) ) {		#if (1!=1) {			$error=true;			$message=__('Wrong format for schedule time.', EMU2_I18N_DOMAIN);		} else {			$schedule_time = $_POST['schedule_time'];			#print date("H:i", strtotime($schedule_time));			#if ( !wp_next_scheduled('EMU2_task_hook') ) {				#die($schedule_time);				# clear old schedule				wp_clear_scheduled_hook('EMU2_task_hook');				# set new schedule				# we need to subtract an gmtoffset				wp_schedule_event( strtotime( $schedule_time ) - get_option('gmt_offset') * 3600 , 'daily', 'EMU2_task_hook' ); // hourly, daily and twicedaily			#}						#print "<br>set: ".wp_get_schedule( 'EMU2_task_hook' );		}	} else {		$schedule_time="";		// deactivate schedule		wp_clear_scheduled_hook('EMU2_task_hook');	}		if ( isset( $_POST['mail_function'] ) ) {		$mail_function = $_POST['mail_function'];	}	if ( isset( $_POST['debug'] ) ) {		$debug = $_POST['debug'];	}		if ( isset( $_POST['double_place'] ) ) {		$double_place = $_POST['double_place'];	}	EMU2_update_default_mail_format( $default_mail_format );	EMU2_update_sender_name( $emu2_sender_name );	EMU2_update_sender_address( $emu2_sender_address );	EMU2_update_max_bcc_recipients( $max_bcc_recipients );	EMU2_update_schedule_time( $schedule_time );	EMU2_update_mail_function( $mail_function );	EMU2_update_debug( $debug );	EMU2_update_double_place( $double_place );if (!$error) {	print '<div class="updated fade">	<p>'.__('Options set successfully', EMU2_I18N_DOMAIN).'</p>	</div>';} else {	print '<div id="error" class="error">	<p>'.$message.'</p>	</div>';}include 'emu2_options_form.php';?>